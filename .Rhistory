rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_JP_st1_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.081, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_AU_st1_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.081, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_EU_st1_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.081, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_UK_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
gamma_functional %>%
gather(key = "Contract", value = "Values") %>%
mutate(US_maturity = rep(maturity, times = dim(UK)[2])) %>%
plot_ly(x = ~US_maturity, y = ~Values, type = "scatter", mode = "lines", color = ~Contract) %>%
layout(title = "Functional coefficients", xaxis = list(title = "US Contract"))
#########################
##### Moving window #####
#########################
date <- rownames(US)
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_FR_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_IT_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_DE_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_JP_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_AU_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
###################################
##### Functional coefficients #####
###################################
# Original: 0.083
# st1_4: 0.081
# st2_4: 0.037
gamma <- as.matrix(read.csv("data_r/Coe/coe_EU_st2_4.csv", header = FALSE))
phi_tilde_t <- kpca(data = US_in, kernel = "rbf", gamma = 0.037, Q = 3)$phi_tilde_t
gamma_functional <- as.data.frame(t(gamma %*% phi_tilde_t))
colnames(gamma_functional) <- paste("Contract", 1: dim(UK)[2])
colors = c(rgb(254,224,210, maxColorValue = 255),
rgb(252,187,161, maxColorValue = 255),
rgb(252,146,114, maxColorValue = 255),
rgb(251,106,74, maxColorValue = 255),
rgb(239,59,44, maxColorValue = 255),
rgb(203,24,29, maxColorValue = 255),
rgb(165,15,21, maxColorValue = 255),
rgb(103,0,13, maxColorValue = 255),
rgb(158,202,225, maxColorValue = 255),
rgb(49,130,189, maxColorValue = 255),
rgb(161,217,155, maxColorValue = 255),
rgb(49,163,84, maxColorValue = 255))
gamma_functional %>%
pivot_longer(cols = 1: dim(UK)[2], names_to = "Contract", values_to = "Values") %>%
mutate(US_maturity = rep(maturity, each = dim(UK)[2])) %>%
mutate(Contract = factor(Contract, levels = paste("Contract", 1: dim(UK)[2]))) %>%
ggplot(aes(x = US_maturity, y = Values, color = Contract)) +
geom_line() +
theme_classic(base_size = 20) +
#theme(legend.text = element_text(size = 14),
#      legend.title = element_text(size = 10)) +
scale_color_manual(labels = c(expression(gamma[1](tau)),
expression(gamma[2](tau)),
expression(gamma[3](tau)),
expression(gamma[4](tau)),
expression(gamma[5](tau)),
expression(gamma[6](tau)),
expression(gamma[7](tau)),
expression(gamma[8](tau)),
expression(gamma[9](tau)),
expression(gamma[10](tau)),
expression(gamma[11](tau)),
#expression(gamma[12](tau))), values = hue_pal()(12)) +
expression(gamma[12](tau))), values = colors) +
xlab("Time to maturity") +
labs(color = expression(paste(gamma, " function")))
library("ggplot2")
library("ggdendro")
library("tidyr")
library("grid")
dat <- read.csv("https://jcoliver.github.io/learn-r/data/otter-mandible-data.csv")
data(FedYieldCurve)
force(FedYieldCurve)
View(FedYieldCurve)
size(FedYieldCurve)
dim(FedYieldCurve)
dat <- FedYieldCurve(337: 456, )
dat <- FedYieldCurve[337: 456, ]
View(dat)
View(US_in)
write.csv(dat, "US_yield.csv")
getwd()
setwd("/Users/HPL/Documents/GitHub/State-Space-Dynamic-Functional-Regression-for-Fixed-Income-Spread-Analysis/")
